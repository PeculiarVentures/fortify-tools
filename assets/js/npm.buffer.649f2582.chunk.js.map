{"version":3,"sources":["webpack:///./node_modules/buffer/node_modules/isarray/index.js","webpack:///./node_modules/buffer/index.js"],"names":["toString","module","exports","Array","isArray","arr","call","base64","ieee754","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","length","RangeError","Uint8Array","__proto__","prototype","arg","encodingOrOffset","this","Error","allocUnsafe","from","value","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","len","checked","copy","buffer","val","type","data","fromObject","assertSize","size","i","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","n","m","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","push","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","fromByteArray","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","e","typedArraySupport","poolSize","_augment","Symbol","species","Object","defineProperty","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst"],"mappings":"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","file":"assets/js/npm.buffer.649f2582.chunk.js","sourcesContent":["var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n"],"sourceRoot":""}