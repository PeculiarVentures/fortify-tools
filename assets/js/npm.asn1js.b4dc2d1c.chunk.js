(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{aBBb:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RawData=t.Repeated=t.Any=t.Choice=t.TIME=t.Duration=t.DateTime=t.TimeOfDay=t.DATE=t.GeneralizedTime=t.UTCTime=t.CharacterString=t.GeneralString=t.VisibleString=t.GraphicString=t.IA5String=t.VideotexString=t.TeletexString=t.PrintableString=t.NumericString=t.UniversalString=t.BmpString=t.Utf8String=t.ObjectIdentifier=t.Enumerated=t.Integer=t.BitString=t.OctetString=t.Null=t.Set=t.Sequence=t.Boolean=t.EndOfContent=t.Constructed=t.Primitive=t.BaseBlock=void 0,t.fromBER=oe,t.compareSchema=ae,t.verifySchema=function(e,t){if(t instanceof Object===!1)return{verified:!1,result:{error:"Wrong ASN.1 schema type"}};const r=oe(e);if(-1===r.offset)return{verified:!1,result:r.result};return ae(r.result,r.result,t)},t.fromJSON=function(e){};var s=r("OC09");const i=[new Uint8Array([1])],n="0123456789";class l{constructor(e={}){this.blockLength=(0,s.getParametersValue)(e,"blockLength",0),this.error=(0,s.getParametersValue)(e,"error",""),this.warnings=(0,s.getParametersValue)(e,"warnings",[]),this.valueBeforeDecode="valueBeforeDecode"in e?e.valueBeforeDecode.slice(0):new ArrayBuffer(0)}static blockName(){return"baseBlock"}toJSON(){return{blockName:this.constructor.blockName(),blockLength:this.blockLength,error:this.error,warnings:this.warnings,valueBeforeDecode:(0,s.bufferToHexCodes)(this.valueBeforeDecode,0,this.valueBeforeDecode.byteLength)}}}const o=e=>(class extends e{constructor(e={}){super(e),this.isHexOnly=(0,s.getParametersValue)(e,"isHexOnly",!1),this.valueHex="valueHex"in e?e.valueHex.slice(0):new ArrayBuffer(0)}static blockName(){return"hexBlock"}fromBER(e,t,r){if(!1===(0,s.checkBufferParams)(this,e,t,r))return-1;return 0===new Uint8Array(e,t,r).length?(this.warnings.push("Zero buffer length"),t):(this.valueHex=e.slice(t,t+r),this.blockLength=r,t+r)}toBER(e=!1){return!0!==this.isHexOnly?(this.error='Flag "isHexOnly" is not set, abort',new ArrayBuffer(0)):!0===e?new ArrayBuffer(this.valueHex.byteLength):this.valueHex.slice(0)}toJSON(){let e={};try{e=super.toJSON()}catch(t){}return e.blockName=this.constructor.blockName(),e.isHexOnly=this.isHexOnly,e.valueHex=(0,s.bufferToHexCodes)(this.valueHex,0,this.valueHex.byteLength),e}});class a extends(o(l)){constructor(e={}){super(),"idBlock"in e?(this.isHexOnly=(0,s.getParametersValue)(e.idBlock,"isHexOnly",!1),this.valueHex=(0,s.getParametersValue)(e.idBlock,"valueHex",new ArrayBuffer(0)),this.tagClass=(0,s.getParametersValue)(e.idBlock,"tagClass",-1),this.tagNumber=(0,s.getParametersValue)(e.idBlock,"tagNumber",-1),this.isConstructed=(0,s.getParametersValue)(e.idBlock,"isConstructed",!1)):(this.tagClass=-1,this.tagNumber=-1,this.isConstructed=!1)}static blockName(){return"identificationBlock"}toBER(e=!1){let t,r,i=0;switch(this.tagClass){case 1:i|=0;break;case 2:i|=64;break;case 3:i|=128;break;case 4:i|=192;break;default:return this.error="Unknown tag class",new ArrayBuffer(0)}if(this.isConstructed&&(i|=32),this.tagNumber<31&&!this.isHexOnly){if(t=new ArrayBuffer(1),r=new Uint8Array(t),!e){let e=this.tagNumber;i|=e&=31,r[0]=i}return t}if(!1===this.isHexOnly){const n=(0,s.utilToBase)(this.tagNumber,7),l=new Uint8Array(n),o=n.byteLength;if(t=new ArrayBuffer(o+1),(r=new Uint8Array(t))[0]=31|i,!e){for(let e=0;e<o-1;e++)r[e+1]=128|l[e];r[o]=l[o-1]}return t}if(t=new ArrayBuffer(this.valueHex.byteLength+1),(r=new Uint8Array(t))[0]=31|i,!1===e){const e=new Uint8Array(this.valueHex);for(let t=0;t<e.length-1;t++)r[t+1]=128|e[t];r[this.valueHex.byteLength]=e[e.length-1]}return t}fromBER(e,t,r){if(!1===(0,s.checkBufferParams)(this,e,t,r))return-1;const i=new Uint8Array(e,t,r);if(0===i.length)return this.error="Zero buffer length",-1;switch(192&i[0]){case 0:this.tagClass=1;break;case 64:this.tagClass=2;break;case 128:this.tagClass=3;break;case 192:this.tagClass=4;break;default:return this.error="Unknown tag class",-1}this.isConstructed=32===(32&i[0]),this.isHexOnly=!1;const n=31&i[0];if(31!==n)this.tagNumber=n,this.blockLength=1;else{let e=1;this.valueHex=new ArrayBuffer(255);let t=255,r=new Uint8Array(this.valueHex);for(;128&i[e];){if(r[e-1]=127&i[e],++e>=i.length)return this.error="End of input reached before message was fully decoded",-1;if(e===t){t+=255;const e=new ArrayBuffer(t),s=new Uint8Array(e);for(let t=0;t<r.length;t++)s[t]=r[t];this.valueHex=new ArrayBuffer(t),r=new Uint8Array(this.valueHex)}}this.blockLength=e+1,r[e-1]=127&i[e];const n=new ArrayBuffer(e),l=new Uint8Array(n);for(let s=0;s<e;s++)l[s]=r[s];this.valueHex=new ArrayBuffer(e),(r=new Uint8Array(this.valueHex)).set(l),this.blockLength<=9?this.tagNumber=(0,s.utilFromBase)(r,7):(this.isHexOnly=!0,this.warnings.push("Tag too long, represented as hex-coded"))}if(1===this.tagClass&&this.isConstructed)switch(this.tagNumber){case 1:case 2:case 5:case 6:case 9:case 14:case 23:case 24:case 31:case 32:case 33:case 34:return this.error="Constructed encoding used for primitive type",-1}return t+this.blockLength}toJSON(){let e={};try{e=super.toJSON()}catch(t){}return e.blockName=this.constructor.blockName(),e.tagClass=this.tagClass,e.tagNumber=this.tagNumber,e.isConstructed=this.isConstructed,e}}class c extends l{constructor(e={}){super(),"lenBlock"in e?(this.isIndefiniteForm=(0,s.getParametersValue)(e.lenBlock,"isIndefiniteForm",!1),this.longFormUsed=(0,s.getParametersValue)(e.lenBlock,"longFormUsed",!1),this.length=(0,s.getParametersValue)(e.lenBlock,"length",0)):(this.isIndefiniteForm=!1,this.longFormUsed=!1,this.length=0)}static blockName(){return"lengthBlock"}fromBER(e,t,r){if(!1===(0,s.checkBufferParams)(this,e,t,r))return-1;const i=new Uint8Array(e,t,r);if(0===i.length)return this.error="Zero buffer length",-1;if(255===i[0])return this.error="Length block 0xFF is reserved by standard",-1;if(this.isIndefiniteForm=128===i[0],!0===this.isIndefiniteForm)return this.blockLength=1,t+this.blockLength;if(this.longFormUsed=!!(128&i[0]),!1===this.longFormUsed)return this.length=i[0],this.blockLength=1,t+this.blockLength;const n=127&i[0];if(n>8)return this.error="Too big integer",-1;if(n+1>i.length)return this.error="End of input reached before message was fully decoded",-1;const l=new Uint8Array(n);for(let s=0;s<n;s++)l[s]=i[s+1];return 0===l[n-1]&&this.warnings.push("Needlessly long encoded length"),this.length=(0,s.utilFromBase)(l,8),this.longFormUsed&&this.length<=127&&this.warnings.push("Unneccesary usage of long length form"),this.blockLength=n+1,t+this.blockLength}toBER(e=!1){let t,r;if(this.length>127&&(this.longFormUsed=!0),this.isIndefiniteForm)return t=new ArrayBuffer(1),!1===e&&((r=new Uint8Array(t))[0]=128),t;if(!0===this.longFormUsed){const i=(0,s.utilToBase)(this.length,8);if(i.byteLength>127)return this.error="Too big length",new ArrayBuffer(0);if(t=new ArrayBuffer(i.byteLength+1),!0===e)return t;const n=new Uint8Array(i);(r=new Uint8Array(t))[0]=128|i.byteLength;for(let e=0;e<i.byteLength;e++)r[e+1]=n[e];return t}return t=new ArrayBuffer(1),!1===e&&((r=new Uint8Array(t))[0]=this.length),t}toJSON(){let e={};try{e=super.toJSON()}catch(t){}return e.blockName=this.constructor.blockName(),e.isIndefiniteForm=this.isIndefiniteForm,e.longFormUsed=this.longFormUsed,e.length=this.length,e}}class u extends l{constructor(e={}){super(e)}static blockName(){return"valueBlock"}fromBER(e,t,r){throw TypeError('User need to make a specific function in a class which extends "LocalValueBlock"')}toBER(e=!1){throw TypeError('User need to make a specific function in a class which extends "LocalValueBlock"')}}class h extends l{constructor(e={},t=u){super(e),"name"in e&&(this.name=e.name),"optional"in e&&(this.optional=e.optional),"primitiveSchema"in e&&(this.primitiveSchema=e.primitiveSchema),this.idBlock=new a(e),this.lenBlock=new c(e),this.valueBlock=new t(e)}static blockName(){return"BaseBlock"}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}toBER(e=!1){let t;const r=this.idBlock.toBER(e),i=this.valueBlock.toBER(!0);this.lenBlock.length=i.byteLength;const n=this.lenBlock.toBER(e);let l;if(t=(0,s.utilConcatBuf)(r,n),l=!1===e?this.valueBlock.toBER(e):new ArrayBuffer(this.lenBlock.length),t=(0,s.utilConcatBuf)(t,l),!0===this.lenBlock.isIndefiniteForm){const r=new ArrayBuffer(2);if(!1===e){const e=new Uint8Array(r);e[0]=0,e[1]=0}t=(0,s.utilConcatBuf)(t,r)}return t}toJSON(){let e={};try{e=super.toJSON()}catch(t){}return e.idBlock=this.idBlock.toJSON(),e.lenBlock=this.lenBlock.toJSON(),e.valueBlock=this.valueBlock.toJSON(),"name"in this&&(e.name=this.name),"optional"in this&&(e.optional=this.optional),"primitiveSchema"in this&&(e.primitiveSchema=this.primitiveSchema.toJSON()),e}}t.BaseBlock=h;class f extends u{constructor(e={}){super(e),this.valueHex="valueHex"in e?e.valueHex.slice(0):new ArrayBuffer(0),this.isHexOnly=(0,s.getParametersValue)(e,"isHexOnly",!0)}fromBER(e,t,r){if(!1===(0,s.checkBufferParams)(this,e,t,r))return-1;const i=new Uint8Array(e,t,r);if(0===i.length)return this.warnings.push("Zero buffer length"),t;this.valueHex=new ArrayBuffer(i.length);const n=new Uint8Array(this.valueHex);for(let s=0;s<i.length;s++)n[s]=i[s];return this.blockLength=r,t+r}toBER(e=!1){return this.valueHex.slice(0)}static blockName(){return"PrimitiveValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(t){}return e.valueHex=(0,s.bufferToHexCodes)(this.valueHex,0,this.valueHex.byteLength),e.isHexOnly=this.isHexOnly,e}}class g extends h{constructor(e={}){super(e,f),this.idBlock.isConstructed=!1}static blockName(){return"PRIMITIVE"}}t.Primitive=g;class d extends u{constructor(e={}){super(e),this.value=(0,s.getParametersValue)(e,"value",[]),this.isIndefiniteForm=(0,s.getParametersValue)(e,"isIndefiniteForm",!1)}fromBER(e,t,r){const i=t,n=r;if(!1===(0,s.checkBufferParams)(this,e,t,r))return-1;if(0===new Uint8Array(e,t,r).length)return this.warnings.push("Zero buffer length"),t;let l=t;for(;o=this.isIndefiniteForm,a=r,(!0===o?1:a)>0;){const t=le(e,l,r);if(-1===t.offset)return this.error=t.result.error,this.warnings.concat(t.result.warnings),-1;if(l=t.offset,this.blockLength+=t.result.blockLength,r-=t.result.blockLength,this.value.push(t.result),!0===this.isIndefiniteForm&&t.result.constructor.blockName()===m.blockName())break}var o,a;return!0===this.isIndefiniteForm&&(this.value[this.value.length-1].constructor.blockName()===m.blockName()?this.value.pop():this.warnings.push("No EndOfContent block encoded")),this.valueBeforeDecode=e.slice(i,i+n),l}toBER(e=!1){let t=new ArrayBuffer(0);for(let r=0;r<this.value.length;r++){const i=this.value[r].toBER(e);t=(0,s.utilConcatBuf)(t,i)}return t}static blockName(){return"ConstructedValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(t){}e.isIndefiniteForm=this.isIndefiniteForm,e.value=[];for(let r=0;r<this.value.length;r++)e.value.push(this.value[r].toJSON());return e}}class k extends h{constructor(e={}){super(e,d),this.idBlock.isConstructed=!0}static blockName(){return"CONSTRUCTED"}fromBER(e,t,r){this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm;const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}}t.Constructed=k;class B extends u{constructor(e={}){super(e)}fromBER(e,t,r){return t}toBER(e=!1){return new ArrayBuffer(0)}static blockName(){return"EndOfContentValueBlock"}}class m extends h{constructor(e={}){super(e,B),this.idBlock.tagClass=1,this.idBlock.tagNumber=0}static blockName(){return"EndOfContent"}}t.EndOfContent=m;class v extends u{constructor(e={}){if(super(e),this.value=(0,s.getParametersValue)(e,"value",!1),this.isHexOnly=(0,s.getParametersValue)(e,"isHexOnly",!1),"valueHex"in e)this.valueHex=e.valueHex.slice(0);else if(this.valueHex=new ArrayBuffer(1),!0===this.value){new Uint8Array(this.valueHex)[0]=255}}fromBER(e,t,r){if(!1===(0,s.checkBufferParams)(this,e,t,r))return-1;const i=new Uint8Array(e,t,r);r>1&&this.warnings.push("Boolean value encoded in more then 1 octet"),this.isHexOnly=!0,this.valueHex=new ArrayBuffer(i.length);const n=new Uint8Array(this.valueHex);for(let s=0;s<i.length;s++)n[s]=i[s];return 0!==s.utilDecodeTC.call(this)?this.value=!0:this.value=!1,this.blockLength=r,t+r}toBER(e=!1){return this.valueHex}static blockName(){return"BooleanValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(t){}return e.value=this.value,e.isHexOnly=this.isHexOnly,e.valueHex=(0,s.bufferToHexCodes)(this.valueHex,0,this.valueHex.byteLength),e}}class b extends h{constructor(e={}){super(e,v),this.idBlock.tagClass=1,this.idBlock.tagNumber=1}static blockName(){return"Boolean"}}t.Boolean=b;class y extends k{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=16}static blockName(){return"Sequence"}}t.Sequence=y;class x extends k{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=17}static blockName(){return"Set"}}t.Set=x;class w extends h{constructor(e={}){super(e,l),this.idBlock.tagClass=1,this.idBlock.tagNumber=5}static blockName(){return"Null"}fromBER(e,t,r){return this.lenBlock.length>0&&this.warnings.push("Non-zero length of value block for Null type"),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),this.blockLength+=r,t+r>e.byteLength?(this.error="End of input reached before message was fully decoded (inconsistent offset and length values)",-1):t+r}toBER(e=!1){const t=new ArrayBuffer(2);if(!0===e)return t;const r=new Uint8Array(t);return r[0]=5,r[1]=0,t}}t.Null=w;class p extends(o(d)){constructor(e={}){super(e),this.isConstructed=(0,s.getParametersValue)(e,"isConstructed",!1)}fromBER(e,t,r){let s=0;if(!0===this.isConstructed){if(this.isHexOnly=!1,-1===(s=d.prototype.fromBER.call(this,e,t,r)))return s;for(let e=0;e<this.value.length;e++){const t=this.value[e].constructor.blockName();if(t===m.blockName()){if(!0===this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only",-1}if(t!==N.blockName())return this.error="OCTET STRING may consists of OCTET STRINGs only",-1}}else this.isHexOnly=!0,s=super.fromBER(e,t,r),this.blockLength=r;return s}toBER(e=!1){if(!0===this.isConstructed)return d.prototype.toBER.call(this,e);let t=new ArrayBuffer(this.valueHex.byteLength);return!0===e?t:0===this.valueHex.byteLength?t:t=this.valueHex.slice(0)}static blockName(){return"OctetStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(t){}return e.isConstructed=this.isConstructed,e.isHexOnly=this.isHexOnly,e.valueHex=(0,s.bufferToHexCodes)(this.valueHex,0,this.valueHex.byteLength),e}}class N extends h{constructor(e={}){super(e,p),this.idBlock.tagClass=1,this.idBlock.tagNumber=4}fromBER(e,t,r){return this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,0===r?(0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),t):super.fromBER(e,t,r)}static blockName(){return"OctetString"}isEqual(e){return e instanceof N!==!1&&JSON.stringify(this)===JSON.stringify(e)}}t.OctetString=N;class S extends(o(d)){constructor(e={}){super(e),this.unusedBits=(0,s.getParametersValue)(e,"unusedBits",0),this.isConstructed=(0,s.getParametersValue)(e,"isConstructed",!1),this.blockLength=this.valueHex.byteLength}fromBER(e,t,r){if(0===r)return t;let i=-1;if(!0===this.isConstructed){if(-1===(i=d.prototype.fromBER.call(this,e,t,r)))return i;for(let e=0;e<this.value.length;e++){const t=this.value[e].constructor.blockName();if(t===m.blockName()){if(!0===this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only",-1}if(t!==H.blockName())return this.error="BIT STRING may consists of BIT STRINGs only",-1;if(this.unusedBits>0&&this.value[e].valueBlock.unusedBits>0)return this.error='Usign of "unused bits" inside constructive BIT STRING allowed for least one only',-1;if(this.unusedBits=this.value[e].valueBlock.unusedBits,this.unusedBits>7)return this.error="Unused bits for BitString must be in range 0-7",-1}return i}if(!1===(0,s.checkBufferParams)(this,e,t,r))return-1;const n=new Uint8Array(e,t,r);if(this.unusedBits=n[0],this.unusedBits>7)return this.error="Unused bits for BitString must be in range 0-7",-1;this.valueHex=new ArrayBuffer(n.length-1);const l=new Uint8Array(this.valueHex);for(let s=0;s<r-1;s++)l[s]=n[s+1];return this.blockLength=n.length,t+r}toBER(e=!1){if(!0===this.isConstructed)return d.prototype.toBER.call(this,e);if(!0===e)return new ArrayBuffer(this.valueHex.byteLength+1);if(0===this.valueHex.byteLength)return new ArrayBuffer(0);const t=new Uint8Array(this.valueHex),r=new ArrayBuffer(this.valueHex.byteLength+1),s=new Uint8Array(r);s[0]=this.unusedBits;for(let i=0;i<this.valueHex.byteLength;i++)s[i+1]=t[i];return r}static blockName(){return"BitStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(t){}return e.unusedBits=this.unusedBits,e.isConstructed=this.isConstructed,e.isHexOnly=this.isHexOnly,e.valueHex=(0,s.bufferToHexCodes)(this.valueHex,0,this.valueHex.byteLength),e}}class H extends h{constructor(e={}){super(e,S),this.idBlock.tagClass=1,this.idBlock.tagNumber=3}static blockName(){return"BitString"}fromBER(e,t,r){return 0===r?t:(this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,super.fromBER(e,t,r))}isEqual(e){return e instanceof H!==!1&&JSON.stringify(this)===JSON.stringify(e)}}t.BitString=H;class A extends(o(u)){constructor(e={}){super(e),"value"in e&&(this.valueDec=e.value)}set valueHex(e){this._valueHex=e.slice(0),e.byteLength>=4?(this.warnings.push("Too big Integer for decoding, hex only"),this.isHexOnly=!0,this._valueDec=0):(this.isHexOnly=!1,e.byteLength>0&&(this._valueDec=s.utilDecodeTC.call(this)))}get valueHex(){return this._valueHex}set valueDec(e){this._valueDec=e,this.isHexOnly=!1,this._valueHex=(0,s.utilEncodeTC)(e)}get valueDec(){return this._valueDec}fromDER(e,t,r,s=0){const i=this.fromBER(e,t,r);if(-1===i)return i;const n=new Uint8Array(this._valueHex);if(0===n[0]&&0!==(128&n[1])){const e=new ArrayBuffer(this._valueHex.byteLength-1);new Uint8Array(e).set(new Uint8Array(this._valueHex,1,this._valueHex.byteLength-1)),this._valueHex=e.slice(0)}else if(0!==s&&this._valueHex.byteLength<s){s-this._valueHex.byteLength>1&&(s=this._valueHex.byteLength+1);const e=new ArrayBuffer(s);new Uint8Array(e).set(n,s-this._valueHex.byteLength),this._valueHex=e.slice(0)}return i}toDER(e=!1){const t=new Uint8Array(this._valueHex);switch(!0){case 0!==(128&t[0]):{const e=new ArrayBuffer(this._valueHex.byteLength+1),r=new Uint8Array(e);r[0]=0,r.set(t,1),this._valueHex=e.slice(0)}break;case 0===t[0]&&0===(128&t[1]):{const e=new ArrayBuffer(this._valueHex.byteLength-1);new Uint8Array(e).set(new Uint8Array(this._valueHex,1,this._valueHex.byteLength-1)),this._valueHex=e.slice(0)}}return this.toBER(e)}fromBER(e,t,r){const s=super.fromBER(e,t,r);return-1===s?s:(this.blockLength=r,t+r)}toBER(e=!1){return this.valueHex.slice(0)}static blockName(){return"IntegerValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(t){}return e.valueDec=this.valueDec,e}toString(){function e(e,t){const r=new Uint8Array([0]);let i=new Uint8Array(e),n=new Uint8Array(t),l=i.slice(0);const o=l.length-1;let a=n.slice(0);const c=a.length-1;let u=0;let h=0;for(let f=c<o?o:c;f>=0;f--,h++){switch(!0){case h<a.length:u=l[o-h]+a[c-h]+r[0];break;default:u=l[o-h]+r[0]}switch(r[0]=u/10,!0){case h>=l.length:l=(0,s.utilConcatView)(new Uint8Array([u%10]),l);break;default:l[o-h]=u%10}}return r[0]>0&&(l=(0,s.utilConcatView)(r,l)),l.slice(0)}function t(e){if(e>=i.length)for(let t=i.length;t<=e;t++){const e=new Uint8Array([0]);let r=i[t-1].slice(0);for(let t=r.length-1;t>=0;t--){const s=new Uint8Array([(r[t]<<1)+e[0]]);e[0]=s[0]/10,r[t]=s[0]%10}e[0]>0&&(r=(0,s.utilConcatView)(e,r)),i.push(r)}return i[e]}function r(e,t){let r=0,s=new Uint8Array(e),i=new Uint8Array(t),n=s.slice(0);const l=n.length-1;let o=i.slice(0);const a=o.length-1;let c,u=0;for(let h=a;h>=0;h--,u++)switch(c=n[l-u]-o[a-u]-r,!0){case c<0:r=1,n[l-u]=c+10;break;default:r=0,n[l-u]=c}if(r>0)for(let h=l-a+1;h>=0;h--,u++){if(!((c=n[l-u]-r)<0)){r=0,n[l-u]=c;break}r=1,n[l-u]=c+10}return n.slice()}const l=8*this._valueHex.byteLength-1;let o,a=new Uint8Array(8*this._valueHex.byteLength/3),c=0;const u=new Uint8Array(this._valueHex);let h="",f=!1;for(let s=this._valueHex.byteLength-1;s>=0;s--){o=u[s];for(let s=0;s<8;s++){if(1===(1&o))switch(c){case l:a=r(t(c),a),h="-";break;default:a=e(a,t(c))}c++,o>>=1}}for(let s=0;s<a.length;s++)a[s]&&(f=!0),f&&(h+=n.charAt(a[s]));return!1===f&&(h+=n.charAt(0)),h}}class C extends h{constructor(e={}){super(e,A),this.idBlock.tagClass=1,this.idBlock.tagNumber=2}static blockName(){return"Integer"}isEqual(e){return e instanceof C?this.valueBlock.isHexOnly&&e.valueBlock.isHexOnly?(0,s.isEqualBuffer)(this.valueBlock.valueHex,e.valueBlock.valueHex):this.valueBlock.isHexOnly===e.valueBlock.isHexOnly&&this.valueBlock.valueDec===e.valueBlock.valueDec:e instanceof ArrayBuffer&&(0,s.isEqualBuffer)(this.valueBlock.valueHex,e)}convertToDER(){const e=new C({valueHex:this.valueBlock.valueHex});return e.valueBlock.toDER(),e}convertFromDER(){const e=this.valueBlock.valueHex.byteLength%2?this.valueBlock.valueHex.byteLength+1:this.valueBlock.valueHex.byteLength,t=new C({valueHex:this.valueBlock.valueHex});return t.valueBlock.fromDER(t.valueBlock.valueHex,0,t.valueBlock.valueHex.byteLength,e),t}}t.Integer=C;class L extends C{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=10}static blockName(){return"Enumerated"}}t.Enumerated=L;class O extends(o(l)){constructor(e={}){super(e),this.valueDec=(0,s.getParametersValue)(e,"valueDec",-1),this.isFirstSid=(0,s.getParametersValue)(e,"isFirstSid",!1)}static blockName(){return"sidBlock"}fromBER(e,t,r){if(0===r)return t;if(!1===(0,s.checkBufferParams)(this,e,t,r))return-1;const i=new Uint8Array(e,t,r);this.valueHex=new ArrayBuffer(r);let n=new Uint8Array(this.valueHex);for(let s=0;s<r&&(n[s]=127&i[s],this.blockLength++,0!==(128&i[s]));s++);const l=new ArrayBuffer(this.blockLength),o=new Uint8Array(l);for(let s=0;s<this.blockLength;s++)o[s]=n[s];return this.valueHex=l.slice(0),n=new Uint8Array(this.valueHex),0!==(128&i[this.blockLength-1])?(this.error="End of input reached before message was fully decoded",-1):(0===n[0]&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=(0,s.utilFromBase)(n,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),t+this.blockLength)}toBER(e=!1){let t,r;if(this.isHexOnly){if(!0===e)return new ArrayBuffer(this.valueHex.byteLength);const s=new Uint8Array(this.valueHex);t=new ArrayBuffer(this.blockLength),r=new Uint8Array(t);for(let e=0;e<this.blockLength-1;e++)r[e]=128|s[e];return r[this.blockLength-1]=s[this.blockLength-1],t}const i=(0,s.utilToBase)(this.valueDec,7);if(0===i.byteLength)return this.error="Error during encoding SID value",new ArrayBuffer(0);if(t=new ArrayBuffer(i.byteLength),!1===e){const e=new Uint8Array(i);r=new Uint8Array(t);for(let t=0;t<i.byteLength-1;t++)r[t]=128|e[t];r[i.byteLength-1]=e[i.byteLength-1]}return t}toString(){let e="";if(!0===this.isHexOnly)e=(0,s.bufferToHexCodes)(this.valueHex,0,this.valueHex.byteLength);else if(this.isFirstSid){let t=this.valueDec;this.valueDec<=39?e="0.":this.valueDec<=79?(e="1.",t-=40):(e="2.",t-=80),e+=t.toString()}else e=this.valueDec.toString();return e}toJSON(){let e={};try{e=super.toJSON()}catch(t){}return e.valueDec=this.valueDec,e.isFirstSid=this.isFirstSid,e}}class U extends u{constructor(e={}){super(e),this.fromString((0,s.getParametersValue)(e,"value",""))}fromBER(e,t,r){let s=t;for(;r>0;){const t=new O;if(-1===(s=t.fromBER(e,s,r)))return this.blockLength=0,this.error=t.error,s;0===this.value.length&&(t.isFirstSid=!0),this.blockLength+=t.blockLength,r-=t.blockLength,this.value.push(t)}return s}toBER(e=!1){let t=new ArrayBuffer(0);for(let r=0;r<this.value.length;r++){const i=this.value[r].toBER(e);if(0===i.byteLength)return this.error=this.value[r].error,new ArrayBuffer(0);t=(0,s.utilConcatBuf)(t,i)}return t}fromString(e){this.value=[];let t=0,r=0,s="",i=!1;do{if(s=-1===(r=e.indexOf(".",t))?e.substr(t):e.substr(t,r-t),t=r+1,i){const e=this.value[0];let t=0;switch(e.valueDec){case 0:break;case 1:t=40;break;case 2:t=80;break;default:return this.value=[],!1}const r=parseInt(s,10);if(isNaN(r))return!0;e.valueDec=r+t,i=!1}else{const e=new O;if(e.valueDec=parseInt(s,10),isNaN(e.valueDec))return!0;0===this.value.length&&(e.isFirstSid=!0,i=!0),this.value.push(e)}}while(-1!==r);return!0}toString(){let e="",t=!1;for(let r=0;r<this.value.length;r++){t=this.value[r].isHexOnly;let s=this.value[r].toString();0!==r&&(e=`${e}.`),t?(s=`{${s}}`,this.value[r].isFirstSid?e=`2.{${s} - 80}`:e+=s):e+=s}return e}static blockName(){return"ObjectIdentifierValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(t){}e.value=this.toString(),e.sidArray=[];for(let r=0;r<this.value.length;r++)e.sidArray.push(this.value[r].toJSON());return e}}class E extends h{constructor(e={}){super(e,U),this.idBlock.tagClass=1,this.idBlock.tagNumber=6}static blockName(){return"ObjectIdentifier"}}t.ObjectIdentifier=E;class R extends(o(l)){constructor(e={}){super(e),this.isHexOnly=!0,this.value=""}static blockName(){return"Utf8StringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(t){}return e.value=this.value,e}}class T extends h{constructor(e={}){super(e,R),"value"in e&&this.fromString(e.value),this.idBlock.tagClass=1,this.idBlock.tagNumber=12}static blockName(){return"Utf8String"}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){this.valueBlock.value=String.fromCharCode.apply(null,new Uint8Array(e));try{this.valueBlock.value=decodeURIComponent(escape(this.valueBlock.value))}catch(t){this.warnings.push(`Error during "decodeURIComponent": ${t}, using raw string`)}}fromString(e){const t=unescape(encodeURIComponent(e)),r=t.length;this.valueBlock.valueHex=new ArrayBuffer(r);const s=new Uint8Array(this.valueBlock.valueHex);for(let i=0;i<r;i++)s[i]=t.charCodeAt(i);this.valueBlock.value=e}}t.Utf8String=T;class I extends(o(l)){constructor(e={}){super(e),this.isHexOnly=!0,this.value=""}static blockName(){return"BmpStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(t){}return e.value=this.value,e}}class D extends h{constructor(e={}){super(e,I),"value"in e&&this.fromString(e.value),this.idBlock.tagClass=1,this.idBlock.tagNumber=30}static blockName(){return"BmpString"}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){const t=e.slice(0),r=new Uint8Array(t);for(let s=0;s<r.length;s+=2){const e=r[s];r[s]=r[s+1],r[s+1]=e}this.valueBlock.value=String.fromCharCode.apply(null,new Uint16Array(t))}fromString(e){const t=e.length;this.valueBlock.valueHex=new ArrayBuffer(2*t);const r=new Uint8Array(this.valueBlock.valueHex);for(let i=0;i<t;i++){const t=(0,s.utilToBase)(e.charCodeAt(i),8),n=new Uint8Array(t);if(n.length>2)continue;const l=2-n.length;for(let e=n.length-1;e>=0;e--)r[2*i+e+l]=n[e]}this.valueBlock.value=e}}t.BmpString=D;class F extends(o(l)){constructor(e={}){super(e),this.isHexOnly=!0,this.value=""}static blockName(){return"UniversalStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(t){}return e.value=this.value,e}}class P extends h{constructor(e={}){super(e,F),"value"in e&&this.fromString(e.value),this.idBlock.tagClass=1,this.idBlock.tagNumber=28}static blockName(){return"UniversalString"}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){const t=e.slice(0),r=new Uint8Array(t);for(let s=0;s<r.length;s+=4)r[s]=r[s+3],r[s+1]=r[s+2],r[s+2]=0,r[s+3]=0;this.valueBlock.value=String.fromCharCode.apply(null,new Uint32Array(t))}fromString(e){const t=e.length;this.valueBlock.valueHex=new ArrayBuffer(4*t);const r=new Uint8Array(this.valueBlock.valueHex);for(let i=0;i<t;i++){const t=(0,s.utilToBase)(e.charCodeAt(i),8),n=new Uint8Array(t);if(n.length>4)continue;const l=4-n.length;for(let e=n.length-1;e>=0;e--)r[4*i+e+l]=n[e]}this.valueBlock.value=e}}t.UniversalString=P;class V extends(o(l)){constructor(e={}){super(e),this.value="",this.isHexOnly=!0}static blockName(){return"SimpleStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(t){}return e.value=this.value,e}}class J extends h{constructor(e={}){super(e,V),"value"in e&&this.fromString(e.value)}static blockName(){return"SIMPLESTRING"}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){this.valueBlock.value=String.fromCharCode.apply(null,new Uint8Array(e))}fromString(e){const t=e.length;this.valueBlock.valueHex=new ArrayBuffer(t);const r=new Uint8Array(this.valueBlock.valueHex);for(let s=0;s<t;s++)r[s]=e.charCodeAt(s);this.valueBlock.value=e}}class _ extends J{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=18}static blockName(){return"NumericString"}}t.NumericString=_;class W extends J{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=19}static blockName(){return"PrintableString"}}t.PrintableString=W;class M extends J{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=20}static blockName(){return"TeletexString"}}t.TeletexString=M;class G extends J{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=21}static blockName(){return"VideotexString"}}t.VideotexString=G;class j extends J{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=22}static blockName(){return"IA5String"}}t.IA5String=j;class $ extends J{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=25}static blockName(){return"GraphicString"}}t.GraphicString=$;class Z extends J{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=26}static blockName(){return"VisibleString"}}t.VisibleString=Z;class q extends J{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=27}static blockName(){return"GeneralString"}}t.GeneralString=q;class z extends J{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=29}static blockName(){return"CharacterString"}}t.CharacterString=z;class Y extends Z{constructor(e={}){if(super(e),this.year=0,this.month=0,this.day=0,this.hour=0,this.minute=0,this.second=0,"value"in e){this.fromString(e.value),this.valueBlock.valueHex=new ArrayBuffer(e.value.length);const t=new Uint8Array(this.valueBlock.valueHex);for(let r=0;r<e.value.length;r++)t[r]=e.value.charCodeAt(r)}"valueDate"in e&&(this.fromDate(e.valueDate),this.valueBlock.valueHex=this.toBuffer()),this.idBlock.tagClass=1,this.idBlock.tagNumber=23}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){this.fromString(String.fromCharCode.apply(null,new Uint8Array(e)))}toBuffer(){const e=this.toString(),t=new ArrayBuffer(e.length),r=new Uint8Array(t);for(let s=0;s<e.length;s++)r[s]=e.charCodeAt(s);return t}fromDate(e){this.year=e.getUTCFullYear(),this.month=e.getUTCMonth()+1,this.day=e.getUTCDate(),this.hour=e.getUTCHours(),this.minute=e.getUTCMinutes(),this.second=e.getUTCSeconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second))}fromString(e){const t=/(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})Z/gi.exec(e);if(null===t)return void(this.error="Wrong input string for convertion");const r=parseInt(t[1],10);this.year=r>=50?1900+r:2e3+r,this.month=parseInt(t[2],10),this.day=parseInt(t[3],10),this.hour=parseInt(t[4],10),this.minute=parseInt(t[5],10),this.second=parseInt(t[6],10)}toString(){const e=new Array(7);return e[0]=(0,s.padNumber)(this.year<2e3?this.year-1900:this.year-2e3,2),e[1]=(0,s.padNumber)(this.month,2),e[2]=(0,s.padNumber)(this.day,2),e[3]=(0,s.padNumber)(this.hour,2),e[4]=(0,s.padNumber)(this.minute,2),e[5]=(0,s.padNumber)(this.second,2),e[6]="Z",e.join("")}static blockName(){return"UTCTime"}toJSON(){let e={};try{e=super.toJSON()}catch(t){}return e.year=this.year,e.month=this.month,e.day=this.day,e.hour=this.hour,e.minute=this.minute,e.second=this.second,e}}t.UTCTime=Y;class K extends Z{constructor(e={}){if(super(e),this.year=0,this.month=0,this.day=0,this.hour=0,this.minute=0,this.second=0,this.millisecond=0,"value"in e){this.fromString(e.value),this.valueBlock.valueHex=new ArrayBuffer(e.value.length);const t=new Uint8Array(this.valueBlock.valueHex);for(let r=0;r<e.value.length;r++)t[r]=e.value.charCodeAt(r)}"valueDate"in e&&(this.fromDate(e.valueDate),this.valueBlock.valueHex=this.toBuffer()),this.idBlock.tagClass=1,this.idBlock.tagNumber=24}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){this.fromString(String.fromCharCode.apply(null,new Uint8Array(e)))}toBuffer(){const e=this.toString(),t=new ArrayBuffer(e.length),r=new Uint8Array(t);for(let s=0;s<e.length;s++)r[s]=e.charCodeAt(s);return t}fromDate(e){this.year=e.getUTCFullYear(),this.month=e.getUTCMonth()+1,this.day=e.getUTCDate(),this.hour=e.getUTCHours(),this.minute=e.getUTCMinutes(),this.second=e.getUTCSeconds(),this.millisecond=e.getUTCMilliseconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second,this.millisecond))}fromString(e){let t,r=!1,s="",i="",n=0,l=0,o=0;if("Z"===e[e.length-1])s=e.substr(0,e.length-1),r=!0;else{const t=new Number(e[e.length-1]);if(isNaN(t.valueOf()))throw new Error("Wrong input string for convertion");s=e}if(r){if(-1!==s.indexOf("+"))throw new Error("Wrong input string for convertion");if(-1!==s.indexOf("-"))throw new Error("Wrong input string for convertion")}else{let e=1,t=s.indexOf("+"),r="";if(-1===t&&(t=s.indexOf("-"),e=-1),-1!==t){if(r=s.substr(t+1),s=s.substr(0,t),2!==r.length&&4!==r.length)throw new Error("Wrong input string for convertion");let i=new Number(r.substr(0,2));if(isNaN(i.valueOf()))throw new Error("Wrong input string for convertion");if(l=e*i,4===r.length){if(i=new Number(r.substr(2,2)),isNaN(i.valueOf()))throw new Error("Wrong input string for convertion");o=e*i}}}let a=s.indexOf(".");if(-1===a&&(a=s.indexOf(",")),-1!==a){const e=new Number(`0${s.substr(a)}`);if(isNaN(e.valueOf()))throw new Error("Wrong input string for convertion");n=e.valueOf(),i=s.substr(0,a)}else i=s;switch(!0){case 8===i.length:if(t=/(\d{4})(\d{2})(\d{2})/gi,-1!==a)throw new Error("Wrong input string for convertion");break;case 10===i.length:if(t=/(\d{4})(\d{2})(\d{2})(\d{2})/gi,-1!==a){let e=60*n;this.minute=Math.floor(e),e=60*(e-this.minute),this.second=Math.floor(e),e=1e3*(e-this.second),this.millisecond=Math.floor(e)}break;case 12===i.length:if(t=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})/gi,-1!==a){let e=60*n;this.second=Math.floor(e),e=1e3*(e-this.second),this.millisecond=Math.floor(e)}break;case 14===i.length:if(t=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})/gi,-1!==a){const e=1e3*n;this.millisecond=Math.floor(e)}break;default:throw new Error("Wrong input string for convertion")}const c=t.exec(i);if(null===c)throw new Error("Wrong input string for convertion");for(let u=1;u<c.length;u++)switch(u){case 1:this.year=parseInt(c[u],10);break;case 2:this.month=parseInt(c[u],10);break;case 3:this.day=parseInt(c[u],10);break;case 4:this.hour=parseInt(c[u],10)+l;break;case 5:this.minute=parseInt(c[u],10)+o;break;case 6:this.second=parseInt(c[u],10);break;default:throw new Error("Wrong input string for convertion")}if(!1===r){const e=new Date(this.year,this.month,this.day,this.hour,this.minute,this.second,this.millisecond);this.year=e.getUTCFullYear(),this.month=e.getUTCMonth(),this.day=e.getUTCDay(),this.hour=e.getUTCHours(),this.minute=e.getUTCMinutes(),this.second=e.getUTCSeconds(),this.millisecond=e.getUTCMilliseconds()}}toString(){const e=[];return e.push((0,s.padNumber)(this.year,4)),e.push((0,s.padNumber)(this.month,2)),e.push((0,s.padNumber)(this.day,2)),e.push((0,s.padNumber)(this.hour,2)),e.push((0,s.padNumber)(this.minute,2)),e.push((0,s.padNumber)(this.second,2)),0!==this.millisecond&&(e.push("."),e.push((0,s.padNumber)(this.millisecond,3))),e.push("Z"),e.join("")}static blockName(){return"GeneralizedTime"}toJSON(){let e={};try{e=super.toJSON()}catch(t){}return e.year=this.year,e.month=this.month,e.day=this.day,e.hour=this.hour,e.minute=this.minute,e.second=this.second,e.millisecond=this.millisecond,e}}t.GeneralizedTime=K;class Q extends T{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=31}static blockName(){return"DATE"}}t.DATE=Q;class X extends T{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=32}static blockName(){return"TimeOfDay"}}t.TimeOfDay=X;class ee extends T{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=33}static blockName(){return"DateTime"}}t.DateTime=ee;class te extends T{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=34}static blockName(){return"Duration"}}t.Duration=te;class re extends T{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=14}static blockName(){return"TIME"}}t.TIME=re;class se{constructor(e={}){this.value=(0,s.getParametersValue)(e,"value",[]),this.optional=(0,s.getParametersValue)(e,"optional",!1)}}t.Choice=se;class ie{constructor(e={}){this.name=(0,s.getParametersValue)(e,"name",""),this.optional=(0,s.getParametersValue)(e,"optional",!1)}}t.Any=ie;class ne{constructor(e={}){this.name=(0,s.getParametersValue)(e,"name",""),this.optional=(0,s.getParametersValue)(e,"optional",!1),this.value=(0,s.getParametersValue)(e,"value",new ie),this.local=(0,s.getParametersValue)(e,"local",!1)}}t.Repeated=ne;function le(e,t,r){const i=t;let n=new h({},Object);if(!1===(0,s.checkBufferParams)(new l,e,t,r))return n.error="Wrong input parameters",{offset:-1,result:n};if(0===new Uint8Array(e,t,r).length)return this.error="Zero buffer length",{offset:-1,result:n};let o=n.idBlock.fromBER(e,t,r);if(n.warnings.concat(n.idBlock.warnings),-1===o)return n.error=n.idBlock.error,{offset:-1,result:n};if(t=o,r-=n.idBlock.blockLength,o=n.lenBlock.fromBER(e,t,r),n.warnings.concat(n.lenBlock.warnings),-1===o)return n.error=n.lenBlock.error,{offset:-1,result:n};if(t=o,r-=n.lenBlock.blockLength,!1===n.idBlock.isConstructed&&!0===n.lenBlock.isIndefiniteForm)return n.error="Indefinite length form used for primitive encoding form",{offset:-1,result:n};let a=h;switch(n.idBlock.tagClass){case 1:if(n.idBlock.tagNumber>=37&&!1===n.idBlock.isHexOnly)return n.error="UNIVERSAL 37 and upper tags are reserved by ASN.1 standard",{offset:-1,result:n};switch(n.idBlock.tagNumber){case 0:if(!0===n.idBlock.isConstructed&&n.lenBlock.length>0)return n.error="Type [UNIVERSAL 0] is reserved",{offset:-1,result:n};a=m;break;case 1:a=b;break;case 2:a=C;break;case 3:a=H;break;case 4:a=N;break;case 5:a=w;break;case 6:a=E;break;case 10:a=L;break;case 12:a=T;break;case 14:a=re;break;case 15:return n.error="[UNIVERSAL 15] is reserved by ASN.1 standard",{offset:-1,result:n};case 16:a=y;break;case 17:a=x;break;case 18:a=_;break;case 19:a=W;break;case 20:a=M;break;case 21:a=G;break;case 22:a=j;break;case 23:a=Y;break;case 24:a=K;break;case 25:a=$;break;case 26:a=Z;break;case 27:a=q;break;case 28:a=P;break;case 29:a=z;break;case 30:a=D;break;case 31:a=Q;break;case 32:a=X;break;case 33:a=ee;break;case 34:a=te;break;default:{let s;(s=!0===n.idBlock.isConstructed?new k:new g).idBlock=n.idBlock,s.lenBlock=n.lenBlock,s.warnings=n.warnings,o=(n=s).fromBER(e,t,r)}}break;case 2:case 3:case 4:default:a=!0===n.idBlock.isConstructed?k:g}return o=(n=function(e,t){if(e instanceof t)return e;const r=new t;return r.idBlock=e.idBlock,r.lenBlock=e.lenBlock,r.warnings=e.warnings,r.valueBeforeDecode=e.valueBeforeDecode.slice(0),r}(n,a)).fromBER(e,t,!0===n.lenBlock.isIndefiniteForm?r:n.lenBlock.length),n.valueBeforeDecode=e.slice(i,i+n.blockLength),{offset:o,result:n}}function oe(e){if(0===e.byteLength){const e=new h({},Object);return e.error="Input buffer has zero length",{offset:-1,result:e}}return le(e,0,e.byteLength)}function ae(e,t,r){if(r instanceof se){const s=!1;for(let i=0;i<r.value.length;i++){if(!0===ae(e,t,r.value[i]).verified)return{verified:!0,result:e}}if(!1===s){const e={verified:!1,result:{error:"Wrong values for Choice type"}};return r.hasOwnProperty("name")&&(e.name=r.name),e}}if(r instanceof ie)return r.hasOwnProperty("name")&&(e[r.name]=t),{verified:!0,result:e};if(e instanceof Object===!1)return{verified:!1,result:{error:"Wrong root object"}};if(t instanceof Object===!1)return{verified:!1,result:{error:"Wrong ASN.1 data"}};if(r instanceof Object===!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if("idBlock"in r===!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if("fromBER"in r.idBlock===!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if("toBER"in r.idBlock===!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};const s=r.idBlock.toBER(!1);if(0===s.byteLength)return{verified:!1,result:{error:"Error encoding idBlock for ASN.1 schema"}};if(-1===r.idBlock.fromBER(s,0,s.byteLength))return{verified:!1,result:{error:"Error decoding idBlock for ASN.1 schema"}};if(!1===r.idBlock.hasOwnProperty("tagClass"))return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if(r.idBlock.tagClass!==t.idBlock.tagClass)return{verified:!1,result:e};if(!1===r.idBlock.hasOwnProperty("tagNumber"))return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if(r.idBlock.tagNumber!==t.idBlock.tagNumber)return{verified:!1,result:e};if(!1===r.idBlock.hasOwnProperty("isConstructed"))return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if(r.idBlock.isConstructed!==t.idBlock.isConstructed)return{verified:!1,result:e};if("isHexOnly"in r.idBlock===!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if(r.idBlock.isHexOnly!==t.idBlock.isHexOnly)return{verified:!1,result:e};if(!0===r.idBlock.isHexOnly){if("valueHex"in r.idBlock===!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};const s=new Uint8Array(r.idBlock.valueHex),i=new Uint8Array(t.idBlock.valueHex);if(s.length!==i.length)return{verified:!1,result:e};for(let t=0;t<s.length;t++)if(s[t]!==i[1])return{verified:!1,result:e}}if(r.hasOwnProperty("name")&&(r.name=r.name.replace(/^\s+|\s+$/g,""),""!==r.name&&(e[r.name]=t)),!0===r.idBlock.isConstructed){let s=0,i={verified:!1},n=r.valueBlock.value.length;if(n>0&&r.valueBlock.value[0]instanceof ne&&(n=t.valueBlock.value.length),0===n)return{verified:!0,result:e};if(0===t.valueBlock.value.length&&0!==r.valueBlock.value.length){let t=!0;for(let e=0;e<r.valueBlock.value.length;e++)t=t&&(r.valueBlock.value[e].optional||!1);return!0===t?{verified:!0,result:e}:(r.hasOwnProperty("name")&&(r.name=r.name.replace(/^\s+|\s+$/g,""),""!==r.name&&delete e[r.name]),e.error="Inconsistent object length",{verified:!1,result:e})}for(let l=0;l<n;l++)if(l-s>=t.valueBlock.value.length){if(!1===r.valueBlock.value[l].optional){const t={verified:!1,result:e};return e.error="Inconsistent length between ASN.1 data and schema",r.hasOwnProperty("name")&&(r.name=r.name.replace(/^\s+|\s+$/g,""),""!==r.name&&(delete e[r.name],t.name=r.name)),t}}else if(r.valueBlock.value[0]instanceof ne){if(!1===(i=ae(e,t.valueBlock.value[l],r.valueBlock.value[0].value)).verified){if(!0!==r.valueBlock.value[0].optional)return r.hasOwnProperty("name")&&(r.name=r.name.replace(/^\s+|\s+$/g,""),""!==r.name&&delete e[r.name]),i;s++}if("name"in r.valueBlock.value[0]&&r.valueBlock.value[0].name.length>0){let s={};"undefined"===typeof(s="local"in r.valueBlock.value[0]&&!0===r.valueBlock.value[0].local?t:e)[r.valueBlock.value[0].name]&&(s[r.valueBlock.value[0].name]=[]),s[r.valueBlock.value[0].name].push(t.valueBlock.value[l])}}else if(!1===(i=ae(e,t.valueBlock.value[l-s],r.valueBlock.value[l])).verified){if(!0!==r.valueBlock.value[l].optional)return r.hasOwnProperty("name")&&(r.name=r.name.replace(/^\s+|\s+$/g,""),""!==r.name&&delete e[r.name]),i;s++}if(!1===i.verified){const t={verified:!1,result:e};return r.hasOwnProperty("name")&&(r.name=r.name.replace(/^\s+|\s+$/g,""),""!==r.name&&(delete e[r.name],t.name=r.name)),t}return{verified:!0,result:e}}if("primitiveSchema"in r&&"valueHex"in t.valueBlock){const s=oe(t.valueBlock.valueHex);if(-1===s.offset){const t={verified:!1,result:s.result};return r.hasOwnProperty("name")&&(r.name=r.name.replace(/^\s+|\s+$/g,""),""!==r.name&&(delete e[r.name],t.name=r.name)),t}return ae(e,s.result,r.primitiveSchema)}return{verified:!0,result:e}}t.RawData=class{constructor(e={}){this.data=(0,s.getParametersValue)(e,"data",new ArrayBuffer(0))}fromBER(e,t,r){return this.data=e.slice(t,r),t+r}toBER(e=!1){return this.data}}}}]);